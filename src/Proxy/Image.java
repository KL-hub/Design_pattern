package Proxy;

/**
 * 一个类代表另一个类的功能，这种类型的设计模式属于 结构型模式
 * 创建现有对象的对象，以便向外界提供功能接口
 *
 * 区别：
 *      和适配器模式的区别：  适配器主要改变所考虑对象的接口，而代理模式不能改变所代理类的接口
 *      和装饰器模式的额区别：装饰器模式主要为了增强功能，代理模式主要为了加以控制。
 */
public interface Image {
    void display();
}
